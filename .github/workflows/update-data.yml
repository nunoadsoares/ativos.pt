name: Update Economic Data

on:
  schedule:
    # Corre todos os dias às 7h UTC (corresponde às 8h em Portugal Continental no verão)
    - cron: '0 7 * * *'
  workflow_dispatch: # Permite execução manual a partir do separador "Actions"

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do repositório
      # O `token` foi removido daqui pois não é necessário para o checkout de um repo público.
      # O `persist-credentials: false` é a parte crucial a manter.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # 2. Debug: variáveis de ambiente (mantido para depuração)
      - name: Show relevant environment variables
        run: |
          echo "📁 Current directory: $(pwd)"
          echo "🔀 Current branch: $(git branch --show-current)"
          echo "🌐 Remote origin: $(git remote get-url origin)"
          echo "🔐 GH_PAT length: ${#GH_PAT:-0}"
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

      # 3. Preparar Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 4. Instalar dependências
      - name: Install dependencies
        run: pip install -r ./packages/data-worker/requirements.txt

      # 5. Executar o script que atualiza os dados
      - name: Run Data Worker
        run: python ./packages/data-worker/update_all.py

      # 6. Debug: verificar o estado antes do commit
      - name: Status before commit
        run: |
          echo "📦 Modified files:"
          git status --short
          echo "🔁 Configured remotes:"
          git remote -v

      # 7. Commit e push das alterações usando o GH_PAT
      # Este passo contém a lógica corrigida.
      - name: Commit and push if data changed
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          # Configura o utilizador do Git para o commit
          git config --global user.name "Ativos.pt Data Bot"
          git config --global user.email "bot@users.noreply.github.com"

          # Adiciona todas as alterações (novos ficheiros, modificados, apagados)
          git add -A
          
          # Faz commit apenas se existirem alterações no "stage".
          # Se não houver nada para commitar, o workflow continua sem erro.
          if git diff --staged --quiet; then
            echo "✅ No changes to commit."
            exit 0
          else
            git commit -m "Data: Atualização automática dos indicadores económicos"
            echo "📝 Commit created."
          fi

          # *** A CORREÇÃO PRINCIPAL ESTÁ AQUI ***
          # Remove o cabeçalho de autenticação do token padrão (GITHUB_TOKEN)
          # que o `actions/checkout` adiciona.
          echo "🔐 Removing default authentication header to use PAT."
          git config --unset-all http.https://github.com/.extraheader

          # Reconfigura a URL do remote 'origin' para usar o Personal Access Token
          echo "🔁 Reconfiguring 'origin' remote with PAT."
          git remote set-url origin "https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}"

          # Faz o push das alterações para a branch 'master'
          echo "🚀 Pushing changes to the repository."
          git push origin HEAD:master