---
import fs from 'node:fs/promises';
import BaseLayout from '~/layouts/BaseLayout.astro';
import RatesCompareChart from '~/components/RatesCompareChart.tsx';

// --- LÓGICA DE PROCESSAMENTO DE DADOS ATUALIZADA ---

type RateInfo = {
  code: string;
  label: string;
  value: string;
  date: string;
  stats: {
    min?: { value: number; date: string };
    max?: { value: number; date: string };
  };
};

const seriesData: Record<string, { date: Date; value: number }[]> = {};

// 1. Processar TAEG do CSV (como antes)
try {
  const csvUrl = new URL(`../../../public/data/interest_rate_taeg.csv`, import.meta.url);
  const txt = await fs.readFile(csvUrl, 'utf-8');
  seriesData['taeg'] = txt.trim().split('\n').slice(1)
    .map(line => line.split(','))
    .filter(([, v]) => v !== '' && !isNaN(+v))
    .map(([d, v]) => ({ date: new Date(d), value: +v }));
} catch {
  seriesData['taeg'] = [];
}

// 2. Processar TAN do NOVO JSON
try {
  const jsonUrl = new URL(`../../../public/data/credito_habitacao_condicoes.json`, import.meta.url);
  const jsonContent = await fs.readFile(jsonUrl, 'utf-8');
  const jsonData = JSON.parse(jsonContent);
  seriesData['tan'] = jsonData
    .filter((row: any) => row.tan_variavel !== null && typeof row.tan_variavel === 'number')
    .map((row: any) => ({ date: new Date(row.date), value: row.tan_variavel }));
} catch {
  seriesData['tan'] = [];
}

// 3. Montar a informação para a página
const seriesInfo: RateInfo[] = [];
for (const code of ['taeg', 'tan']) {
  const label = code.toUpperCase();
  const data = seriesData[code];

  if (data.length === 0) {
    seriesInfo.push({ code, label, value: 'Sem Dados', date: '', stats: {} });
    continue;
  }

  const last = data[data.length - 1];
  const sorted = [...data].sort((a, b) => a.value - b.value);
  const min = sorted[0];
  const max = sorted[sorted.length - 1];

  seriesInfo.push({
    code,
    label: code === 'tan' ? 'TAN (Variável)' : label,
    value: last.value.toFixed(2),
    date: last.date.toLocaleString('pt-PT', { month: 'long', year: 'numeric' }),
    stats: {
      min: { value: min.value, date: min.date.toLocaleString('pt-PT', { month: 'long', year: 'numeric' }) },
      max: { value: max.value, date: max.date.toLocaleString('pt-PT', { month: 'long', year: 'numeric' }) }
    }
  });
}

const tableSeries = seriesInfo.filter(s => s.value !== 'Sem Dados');
const title = 'TAEG & TAN – Novos Créditos à Habitação';
const description = `Histórico e últimos valores da TAEG (${seriesInfo.find(s=>s.code==='taeg')?.value}% em ${seriesInfo.find(s=>s.code==='taeg')?.date})${seriesInfo.find(s=>s.code==='tan')?.value !== 'Sem Dados' ? ` e da TAN (${seriesInfo.find(s=>s.code==='tan')?.value}% em ${seriesInfo.find(s=>s.code==='tan')?.date})` : ''}.`;
const canonical = new URL('/imobiliario/taeg-tan', Astro.site).href;

// --- NOVO CÓDIGO JSON-LD ADICIONADO AQUI ---
const faqSchema = {
    "@context":"https://schema.org","@type":"FAQPage",
    "mainEntity":[
        {
            "@type":"Question",
            "name":"Qual a diferença fundamental entre TAN e TAEG?",
            "acceptedAnswer": {
                "@type":"Answer",
                "text":"A TAN representa apenas o custo dos juros do empréstimo. A TAEG é o 'preço' total do crédito, incluindo não só os juros (TAN), mas também todos os outros encargos obrigatórios como comissões, despesas e seguros. A TAEG é a métrica mais importante para comparar propostas de crédito."
            }
        },
        {
            "@type":"Question",
            "name":"Porque é que a TAEG é sempre mais alta que a TAN?",
            "acceptedAnswer": {
                "@type":"Answer",
                "text":"A TAEG é sempre superior à TAN porque inclui custos adicionais que a TAN não considera, como comissões de dossier, custos de avaliação do imóvel e prémios de seguros de vida e multirriscos associados ao crédito."
            }
        }
    ]
};

const datasetSchema = {
    "@context": "https://schema.org",
    "@type": "Dataset",
    "name": "Comparativo TAEG vs. TAN para Novos Créditos à Habitação em Portugal",
    "description": description,
    "url": canonical,
    "keywords": [ "taeg", "tan", "crédito habitação", "taxa de juro", "custo do crédito", "banca", "portugal", "empréstimo" ],
    "creator": {
        "@type": "Organization",
        "name": "Ativos.pt",
        "url": Astro.site.href
    },
    "license": "https://creativecommons.org/licenses/by/4.0/",
    "variableMeasured": [
        "Taxa Anual de Encargos Efetiva Global (TAEG) Mediana",
        "Taxa Anual Nominal (TAN) Mediana - Modalidade Variável"
    ]
};
---

<BaseLayout {title} {description} {canonical}>
  <Fragment slot="head">
    <script type="application/ld+json" is:inline set:html={JSON.stringify(faqSchema)} />
    <script type="application/ld+json" is:inline set:html={JSON.stringify(datasetSchema)} />
  </Fragment>

  <article class="max-w-5xl mx-auto py-12 px-4 space-y-12">
    <header class="text-center">
      <h1 class="text-4xl md:text-6xl font-extrabold text-gray-900 dark:text-white">
        TAEG &amp; TAN – Novos Créditos à Habitação
      </h1>
      <p class="mt-4 text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
        Últimos valores e histórico das taxas aplicadas em novos créditos à habitação.
      </p>
    </header>

    <section class="grid grid-cols-1 sm:grid-cols-2 gap-6">
      {seriesInfo.map(info => (
        <div class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 p-6 rounded-xl shadow-md flex flex-col">
          <h2 class="text-sm font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
            Último valor {info.label}
          </h2>
          <p class="mt-2 text-4xl font-extrabold text-gray-900 dark:text-white">
            {info.value !== 'Sem Dados' ? `${info.value}%` : 'Sem Dados'}
          </p>
          {info.date && (
            <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
              ({info.date})
            </p>
          )}
        </div>
      ))}
    </section>

    <section class="bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-xl shadow-lg p-6">
      <h2 class="text-2xl font-semibold text-gray-900 dark:text-white mb-4 text-center">
        Evolução Histórica
      </h2>
      <RatesCompareChart client:only="react" />
      <p class="mt-4 text-xs text-gray-500 dark:text-gray-400 italic text-center">
        Fonte: Banco de Portugal via <a href="https://bpstat.bportugal.pt" target="_blank" rel="noopener" class="underline hover:text-primary">BPstat</a>
      </p>
    </section>

    {tableSeries.length > 0 && (
      <section class="overflow-x-auto">
        <table class="w-full text-left border-collapse">
          <thead>
            <tr class="bg-gray-100 dark:bg-gray-700">
              <th class="p-3 text-sm font-medium text-gray-700 dark:text-gray-300">Taxa</th>
              <th class="p-3 text-sm font-medium text-gray-700 dark:text-gray-300">Valor Mínimo</th>
              <th class="p-3 text-sm font-medium text-gray-700 dark:text-gray-300">Data</th>
              <th class="p-3 text-sm font-medium text-gray-700 dark:text-gray-300">Valor Máximo</th>
              <th class="p-3 text-sm font-medium text-gray-700 dark:text-gray-300">Data</th>
            </tr>
          </thead>
          <tbody>
            {tableSeries.map(info => (
              <tr class="border-t border-gray-200 dark:border-gray-700">
                <td class="p-3 font-semibold text-gray-800 dark:text-gray-100">{info.label}</td>
                <td class="p-3 text-green-600 dark:text-green-400">{info.stats.min?.value.toFixed(2)}%</td>
                <td class="p-3 text-gray-600 dark:text-gray-300">{info.stats.min?.date}</td>
                <td class="p-3 text-red-600 dark:text-red-400">{info.stats.max?.value.toFixed(2)}%</td>
                <td class="p-3 text-gray-600 dark:text-gray-300">{info.stats.max?.date}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </section>
    )}

    <section class="pt-8 border-t border-gray-200 dark:border-gray-700">
        </section>
  </article>
</BaseLayout>
