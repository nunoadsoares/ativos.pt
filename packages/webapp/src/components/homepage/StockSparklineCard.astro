---
// C:\Users\nunos\Desktop\ativos.pt\packages\webapp\src\components\homepage\StockSparklineCard.astro
// Responsividade: evitar overflow no mobile mantendo o teu estilo

import Sparkline from '~/components/Sparkline.tsx';

interface Props {
  ticker: string;
  name: string;
  price: number | null;
  changePercent: number | null;
  logoUrl?: string;
  sparkline: number[];
}

const { ticker, name, price, changePercent, logoUrl, sparkline } = Astro.props;

const isPositive = changePercent == null || changePercent >= 0;
const color = isPositive ? '#22c55e' : '#ef4444';
const companyInitials = name.split(' ').map(n => n[0]).slice(0, 2).join('');
---
<a
  href={`/acoes/${ticker}`}
  class="group block w-full overflow-hidden p-4 rounded-2xl border bg-white dark:bg-gray-800/80 border-gray-200 dark:border-gray-700 hover:border-primary dark:hover:border-primary transition-all shadow-sm hover:shadow-lg hover:-translate-y-1 flex flex-col justify-between min-h-[160px]"
>
  <div>
    <div class="flex items-center gap-3 min-w-0">
      {logoUrl ? (
        <img src={logoUrl} alt={`Logo de ${name}`} class="h-9 w-9 rounded-full bg-white object-contain flex-shrink-0" loading="lazy" />
      ) : (
        <div class="h-9 w-9 flex-shrink-0 flex items-center justify-center bg-gray-200 dark:bg-gray-700 rounded-full">
          <span class="text-sm font-bold text-gray-600 dark:text-gray-400">{companyInitials}</span>
        </div>
      )}
      <div class="min-w-0 flex-1">
        <h3 class="font-bold text-gray-900 dark:text-white group-hover:text-primary transition-colors line-clamp-1" title={name}>
          {name}
        </h3>
        <p class="text-xs font-mono text-gray-500 dark:text-gray-400 truncate" title={ticker}>
          {ticker}
        </p>
      </div>
    </div>

    <div class="mt-3 flex justify-between items-baseline gap-2">
      <p class="text-xl font-mono font-bold text-gray-900 dark:text-white">
        {price != null ? price.toFixed(2) : 'N/D'}
      </p>
      <p class:list={["font-semibold text-sm whitespace-nowrap", isPositive ? "text-emerald-500" : "text-red-500"]}>
        {changePercent != null && changePercent > 0 ? '+' : ''}{changePercent != null ? changePercent.toFixed(2) : '0.00'}%
      </p>
    </div>
  </div>

  <div class="mt-2 h-10 w-full opacity-70 group-hover:opacity-100 transition-opacity">
    <Sparkline client:visible seriesData={sparkline} color={color} width="100%" height={40}/>
  </div>
</a>
