---
import logoLight from '~/assets/logo.png';
import logoDark  from '~/assets/logo_dark.png';

/* Navegação principal (ordem = prioridade UX) */
const navLinks = [
  { href: '/',              label: 'Início'        },
  { href: '/simuladores',   label: 'Simuladores'   },
  { href: '/guias-fiscais', label: 'Guias Fiscais' },
  { href: '/ativos',        label: 'Ativos'        },
  { href: '/plataformas',   label: 'Corretoras'    }
];

/* Para destacar link activo */
const current = Astro.url.pathname.replace(/\/+$/, ''); // remove trailing /
---
<header id="main-header"
  class="
    sticky top-0 z-50 h-24 w-full
    flex items-center
    bg-white/80 dark:bg-brand-dark/80 backdrop-blur-md
    transition-all duration-300
    scrolled:h-20 scrolled:top-4 scrolled:w-[95%] scrolled:max-w-7xl
    scrolled:mx-auto scrolled:rounded-2xl scrolled:shadow-lg scrolled:ring-1 scrolled:ring-black/5
  ">
  <div class="flex items-center justify-between w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    
    <!-- Logo -->
    <a href="/" class="flex items-center flex-shrink-0">
      <img src={logoLight.src} alt="Ativos.pt" class="h-10 w-auto dark:hidden" />
      <img src={logoDark.src}  alt="Ativos.pt" class="h-10 w-auto hidden dark:block" />
    </a>

    <!-- Desktop nav -->
    <nav class="hidden md:flex md:items-center md:space-x-8">
      {navLinks.map(l => {
        const isActive = current === l.href.replace(/\/+$/, '');
        const classes  = isActive
          ? 'text-primary font-semibold'
          : 'text-gray-600 dark:text-gray-300 hover:text-primary';
        return (
          <a href={l.href} class={`transition-colors ${classes}`}>{l.label}</a>
        );
      })}
    </nav>

    <!-- Theme toggle + mobile button -->
    <div class="flex items-center md:space-x-2">

      <!-- Tema -->
      <button id="theme-toggle" class="p-2 rounded-full text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 focus:ring-2 focus:ring-primary">
        <span class="sr-only">Mudar tema</span>
        <!-- Lua -->
        <svg id="icon-moon"  class="h-6 w-6 dark:hidden" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M21 12.79A9 9 0 1111.21 3 7 7 0 0021 12.79z"/></svg>
        <!-- Sol -->
        <svg id="icon-sun"   class="h-6 w-6 hidden dark:block" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M12 3v2m0 14v2m9-9h-2M5 12H3m15.364 6.364l-1.414-1.414M6.05 6.05L4.636 4.636m14.728 0L18.364 6.05M6.05 17.95l-1.414 1.414M16 12a4 4 0 11-8 0 4 4 0 018 0z"/></svg>
      </button>

      <!-- Mobile menu -->
      <button id="menu-btn" class="md:hidden p-2 rounded-md text-gray-400 focus:ring-2 focus:ring-primary">
        <span class="sr-only">Menu</span>
        <svg id="menu-open"  class="h-6 w-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16"/></svg>
        <svg id="menu-close" class="h-6 w-6 hidden" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/></svg>
      </button>
    </div>
  </div>
</header>

<!-- Mobile drawer -->
<nav id="mobile-drawer" class="md:hidden hidden fixed top-24 left-0 w-full bg-white dark:bg-brand-dark z-40 border-t border-gray-200 dark:border-gray-700">
  <div class="px-4 py-4 space-y-2">
    {navLinks.map(l => (
      <a href={l.href} class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800">
        {l.label}
      </a>
    ))}
  </div>
</nav>

<!-- Scripts -->
<script>
  /* ─ Scroll shrink ─ */
  (() => {
    const header = document.getElementById('main-header');
    let isScrolled = false;
    window.addEventListener('scroll', () => {
      const sc = window.scrollY > 50;
      if (sc !== isScrolled) {
        isScrolled = sc;
        header.classList.toggle('scrolled', sc);
      }
    }, { passive: true });
  })();

  /* ─ Theme toggle ─ */
  (() => {
    const btn   = document.getElementById('theme-toggle');
    const root  = document.documentElement;
    const apply = theme => {
      root.classList.toggle('dark', theme === 'dark');
      localStorage.setItem('theme', theme);
    };
    /* estado inicial */
    apply(localStorage.getItem('theme') || (matchMedia('(prefers-color-scheme:dark)').matches ? 'dark' : 'light'));
    /* click */
    btn && btn.addEventListener('click', () => {
      apply(root.classList.contains('dark') ? 'light' : 'dark');
    });
  })();

  /* ─ Mobile drawer ─ */
  (() => {
    const btn   = document.getElementById('menu-btn');
    const drawer= document.getElementById('mobile-drawer');
    if (!btn || !drawer) return;
    btn.addEventListener('click', () => {
      drawer.classList.toggle('hidden');
      document.getElementById('menu-open') .classList.toggle('hidden');
      document.getElementById('menu-close').classList.toggle('hidden');
    });
  })();
</script>
