---
// src/components/Navbar.astro
import logoImage from '~/assets/logo.png';
import logoDarkImage from '~/assets/logo_dark.png';

const navLinks = [
  { href: "/", text: "Início" },
  { href: "/glossario", text: "Glossário" },
  { href: "/simuladores", text: "Simuladores" },
];
---
<header 
  id="main-header"
  class="
    sticky top-0 z-50 h-24 w-full 
    transition-all duration-300 ease-in-out
    flex items-center
    bg-white/80 dark:bg-brand-dark/80 backdrop-blur-md
    scrolled:h-20 scrolled:top-4 scrolled:w-[95%] scrolled:max-w-7xl 
    scrolled:mx-auto scrolled:rounded-2xl scrolled:shadow-lg scrolled:ring-1 scrolled:ring-black/5
  "
>
  <div class="flex items-center justify-between w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex-shrink-0">
      <a href="/" class="flex items-center">
        <!-- Logo para tema claro, escondido no escuro -->
        <img class="h-10 w-auto dark:hidden" src={logoImage.src} alt="Logo Ativos.pt" />
        <!-- Logo para tema escuro, mostrado apenas no escuro -->
        <img class="h-10 w-auto hidden dark:block" src={logoDarkImage.src} alt="Logo Ativos.pt" />
      </a>
    </div>

    <nav class="hidden md:flex md:items-center md:space-x-8">
      {navLinks.map(link => (
        <a href={link.href} class="font-medium text-gray-600 dark:text-gray-300 hover:text-primary transition-colors">
          {link.text}
        </a>
      ))}
    </nav>
    
    <!-- Botão de Troca de Tema e Menu Mobile -->
    <div class="flex items-center">
        <!-- Botão de Troca de Tema -->
        <button id="theme-toggle-button" type="button" class="mr-4 p-2 rounded-full text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary">
            <span class="sr-only">Mudar tema</span>
            <!-- Ícone de Lua (visível no tema claro) -->
            <svg id="theme-toggle-dark-icon" class="h-6 w-6 dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"></path></svg>
            <!-- Ícone de Sol (visível no tema escuro) -->
            <svg id="theme-toggle-light-icon" class="h-6 w-6 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path></svg>
        </button>

        <!-- Botão do Menu Mobile -->
        <div class="md:hidden">
            <button id="mobile-menu-button" type="button" class="inline-flex items-center justify-center p-2 rounded-md text-gray-400">
                <span class="sr-only">Abrir menu principal</span>
                <svg id="menu-icon-open" class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" /></svg>
                <svg id="menu-icon-close" class="hidden h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" /></svg>
            </button>
        </div>
    </div>
  </div>
</header>

<div class="md:hidden hidden fixed top-24 left-0 w-full bg-white dark:bg-brand-dark z-40" id="mobile-menu">
  <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
    {navLinks.map(link => (
      <a href={link.href} class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-50 dark:hover:bg-gray-800">{link.text}</a>
    ))}
  </div>
</div>


<script>
  // Script para o menu mobile (continua igual)
  const menuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  // ... (o resto do script do menu mobile fica igual)
  if (menuButton && mobileMenu) {
    menuButton.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      document.getElementById('menu-icon-open')?.classList.toggle('hidden');
      document.getElementById('menu-icon-close')?.classList.toggle('hidden');
    });
  }

  // Script para o efeito de scroll (continua igual)
  const header = document.getElementById('main-header');
  // ... (o resto do script de scroll fica igual)
  if (header) {
    const SCROLL_THRESHOLD = 50; 
    let isScrolled = false;
    const handleScroll = () => {
      const shouldBeScrolled = window.scrollY > SCROLL_THRESHOLD;
      if (shouldBeScrolled !== isScrolled) {
        isScrolled = shouldBeScrolled;
        header.classList.toggle('scrolled', isScrolled);
      }
    };
    window.addEventListener('scroll', handleScroll, { passive: true });
  }

  // --- NOVO SCRIPT PARA O TEMA ---
  const themeToggleButton = document.getElementById('theme-toggle-button');

  // Função para aplicar o tema (claro ou escuro)
  const applyTheme = (theme) => {
    if (theme === 'dark') {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  };

  // Função para alternar o tema
  const toggleTheme = () => {
    const isDarkMode = document.documentElement.classList.contains('dark');
    const newTheme = isDarkMode ? 'light' : 'dark';
    localStorage.setItem('theme', newTheme);
    applyTheme(newTheme);
  };

  // Adiciona o listener ao botão
  if (themeToggleButton) {
    themeToggleButton.addEventListener('click', toggleTheme);
  }

  // Define o tema inicial ao carregar a página
  const initialTheme = localStorage.getItem('theme') || 
    (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
  applyTheme(initialTheme);

</script>
